{
  "hash": "c8339a19a9f50b9627516e7a59f5e35e",
  "result": {
    "markdown": "---\ntitle: \"Decoding Data with Linear Regression: Predictions & Insights\"\nauthor: \"Ellie Woodward\"\ndate: \"2023-11-20\"\ncategories: [code]\nimage: \"linear.png\"\ntheme:\n  - custom.css\n---\n\n<p style='font-size:23px'>\n&emsp;&emsp; \n</p>\n\n::: {.cell execution_count=1}\n``` {.python .cell-code code-fold=\"true\"}\nimport pandas as pd\nimport numpy as np\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nfrom sklearn.model_selection import train_test_split\nfrom sklearn.linear_model import LinearRegression\n```\n:::\n\n\n<p style='font-size:23px'>\n&emsp;&emsp;In the realm of machine learning, predictive modeling stands as a strong force for reshaping industries and driving innovation. At the core of this field lies linear regression, a fundamental yet powerful statistical technique that serves as a cornerstone for making predictions based on data. Imagine we have data points that represent things like house prices and their sizes. Linear regression helps find a straight line that best fits these points, allowing you to predict the price of a house based on its size. In machine learning predicting this outcome based on the input data can help us predict future prices or see trends. Linear regression is commonly used in all different types of industries, it helps companies make informed decisions. \n</p>\n<p style='font-size:23px'>\n&emsp;&emsp;Marketing and advertising industries heavily rely on trend analysis. In pursuit of understanding these trends, I obtained a dataset from <a href=\"https://www.kaggle.com/datasets/ashydv/advertising-dataset/\">Kaggle.com</a> that details sales figures correlated with expenditures on TV, newspaper, and radio advertising.\n<p>\n\n::: {.cell execution_count=2}\n``` {.python .cell-code code-fold=\"true\"}\nadvertisement_df = pd.read_csv(\"../../python-notebooks/datasets/advertising.csv\")\nadvertisement_df.head()\n```\n\n::: {.cell-output .cell-output-display execution_count=18}\n```{=html}\n<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>TV</th>\n      <th>Radio</th>\n      <th>Newspaper</th>\n      <th>Sales</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>230.1</td>\n      <td>37.8</td>\n      <td>69.2</td>\n      <td>22.1</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>44.5</td>\n      <td>39.3</td>\n      <td>45.1</td>\n      <td>10.4</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>17.2</td>\n      <td>45.9</td>\n      <td>69.3</td>\n      <td>12.0</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>151.5</td>\n      <td>41.3</td>\n      <td>58.5</td>\n      <td>16.5</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>180.8</td>\n      <td>10.8</td>\n      <td>58.4</td>\n      <td>17.9</td>\n    </tr>\n  </tbody>\n</table>\n</div>\n```\n:::\n:::\n\n\n<p style='font-size:23px'>\n&emsp;&emsp;Our primary focus lies in assessing the correlation between TV advertisement spending, radio advertisement and sales. Initially, we'll improve the dataset by eliminating irrelevant columns and then juxtapose the pertinent data for analysis.\n</p>\n\n::: {.cell execution_count=3}\n``` {.python .cell-code code-fold=\"true\"}\nadvertisement_df.drop(columns=['Newspaper'], inplace = True)\nsns.pairplot(advertisement_df, x_vars=['TV', 'Radio'], y_vars='Sales', height=4, aspect=1, kind='scatter')\nplt.show()\n```\n\n::: {.cell-output .cell-output-display}\n![](index_files/figure-html/cell-4-output-1.png){width=758 height=382}\n:::\n:::\n\n\n <p style='font-size:23px'>\n&emsp;&emsp;Upon observation, the Radio data exhibits considerably higher dispersion compared to the TV data. Moving forward, our aim is to train a linear model. Employing the 'train_test_split' technique, we'll allocate 70% of the data for training and 30% for testing, separately for both TV and radio datasets.\n</p>\n\n::: {.cell execution_count=4}\n``` {.python .cell-code}\nx_tv = advertisement_df[['TV']]\ny_tv = advertisement_df['Sales']\nx_train, x_test, y_train, y_test = train_test_split(x_tv, y_tv, test_size = 0.3, random_state = 100)\nx_radio = advertisement_df[['Radio']]\ny_radio = advertisement_df['Sales']\nx_train_radio, x_test_radio, y_train_radio, y_test_radio = train_test_split(x_radio, y_radio, test_size = 0.3, random_state = 100)\nlrm_tv = LinearRegression().fit(x_train, y_train)\nlrm_radio = LinearRegression().fit(x_train_radio, y_train_radio) \n```\n:::\n\n\n::: {.cell execution_count=5}\n``` {.python .cell-code code-fold=\"true\"}\nplt.scatter(x_test,y_test)\nplt.xlabel(\"$ amount spent on TV advertising\")\nplt.ylabel(\"Number of sales\")\n\nplt.title(\"Number of sales per amount spent on TV ads\")\nplt.show()\n```\n\n::: {.cell-output .cell-output-display}\n![](index_files/figure-html/cell-6-output-1.png){width=597 height=449}\n:::\n:::\n\n\n::: {.cell execution_count=6}\n``` {.python .cell-code code-fold=\"true\"}\nplt.scatter(x_test_radio,y_test_radio)\nplt.xlabel(\"$ amount spent on Radio advertising\")\nplt.ylabel(\"Number of sales\")\nplt.title(\"Number of sales per amount spent on Radio ads\")\nplt.show()\n```\n\n::: {.cell-output .cell-output-display}\n![](index_files/figure-html/cell-7-output-1.png){width=597 height=449}\n:::\n:::\n\n\n <p style='font-size:23px'>\n&emsp;&emsp;Our visual analysis echoes previous observations. The TV dataset exhibits a more compact ascending structure, suggesting a positive linear relationship, while the radio dataset diverges noticeably. Subsequently, we'll utilize the trained linear regression model to predict sales for both TV and radio advertising channels.\n</p>\n\n::: {.cell execution_count=7}\n``` {.python .cell-code}\ny_pred_lrm_tv= lrm_tv.predict(x_test)\ny_pred_lrm_radio= lrm_radio.predict(x_test_radio)\nlrm_diff = pd.DataFrame({'Actual Sales': y_test, 'Predicted Sales for TV': y_pred_lrm_tv, \n                         'Predicted Sales for Radio': y_pred_lrm_radio})\nlrm_diff.head()\n```\n\n::: {.cell-output .cell-output-display execution_count=23}\n```{=html}\n<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>Actual Sales</th>\n      <th>Predicted Sales for TV</th>\n      <th>Predicted Sales for Radio</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>126</th>\n      <td>6.6</td>\n      <td>7.374140</td>\n      <td>16.985157</td>\n    </tr>\n    <tr>\n      <th>104</th>\n      <td>20.7</td>\n      <td>19.941482</td>\n      <td>16.415126</td>\n    </tr>\n    <tr>\n      <th>99</th>\n      <td>17.2</td>\n      <td>14.323269</td>\n      <td>17.332133</td>\n    </tr>\n    <tr>\n      <th>92</th>\n      <td>19.4</td>\n      <td>18.823294</td>\n      <td>16.315990</td>\n    </tr>\n    <tr>\n      <th>111</th>\n      <td>21.8</td>\n      <td>20.132392</td>\n      <td>16.873629</td>\n    </tr>\n  </tbody>\n</table>\n</div>\n```\n:::\n:::\n\n\n <p style='font-size:23px'>\n&emsp;&emsp;While the model's predictions for TV advertisement sales align closely with actual figures, its performance in predicting radio advertisement sales falls significantly short. This discrepancy signals that a linear model might not be suitable for radio advertising, which we'll corroborate by graphing the data.\n</p>\n\n::: {.cell execution_count=8}\n``` {.python .cell-code code-fold=\"true\"}\nplt.scatter(x_test,y_test)\nplt.plot(x_test, y_pred_lrm_tv, 'Red')\nplt.xlabel(\"$ amount spent on TV advertising\")\nplt.ylabel(\"Number of sales\")\nplt.title(\"Number of sales per amount spent on TV ads\")\n```\n\n::: {.cell-output .cell-output-display execution_count=24}\n```\nText(0.5, 1.0, 'Number of sales per amount spent on TV ads')\n```\n:::\n\n::: {.cell-output .cell-output-display}\n![](index_files/figure-html/cell-9-output-2.png){width=597 height=449}\n:::\n:::\n\n\n::: {.cell execution_count=9}\n``` {.python .cell-code code-fold=\"true\"}\nplt.scatter(x_test_radio,y_test_radio)\nplt.plot(x_test_radio, y_pred_lrm_radio, 'Red')\nplt.xlabel(\"$ amount spent on Radio advertising\")\nplt.ylabel(\"Number of sales\")\nplt.title(\"Number of sales per amount spent on Radio ads\")\nplt.show()\n```\n\n::: {.cell-output .cell-output-display}\n![](index_files/figure-html/cell-10-output-1.png){width=597 height=449}\n:::\n:::\n\n\n <p style='font-size:23px'>\n&emsp;&emsp;Comparing the two graphs highlights the clear linear relationship between TV advertisement spending and sales, contrasting with the inconsistency in radio advertising. The limitations of the linear model's fit to the radio data suggest a need for non-linear regression, indicating a potential requirement for a more curved or complex model to better represent this relationship.\n</p>\n <p style='font-size:23px'>\n&emsp;&emsp;Insights learned from this visualization suggest that the company's sales potential significantly benefits from TV advertising over radio. Armed with this data, a marketer could assert, \"Increased investment in TV advertising directly correlates with higher sales.\" Conversely, the erratic nature of radio advertising data may prompt a recommendation to reconsider its budget allocation due to its scattered and less predictable impact on sales.\n</p>\n <p style='font-size:23px'>\n&emsp;&emsp;Linear regression, a fundamental tool in machine learning, enables us to decipher relationships between variables. Our analysis highlighted its efficacy in predicting sales based on TV advertising spending. In conclusion, linear regression helps us with uncovering correlations, making predictions, guiding decisions, and so much more, becoming a versatile tool across diverse fields of study and application.\n</p>\n\n<br/>\n<br />\n <p style='font-size:15px'>\nThank you!\n</p>\n <p style='font-size:15px'>\nReferences: <a href=\"https://www.ibm.com/topics/linear-regression\">IBM Linear Regression</a>\n</p>\n\n",
    "supporting": [
      "index_files"
    ],
    "filters": [],
    "includes": {
      "include-in-header": [
        "<script src=\"https://cdnjs.cloudflare.com/ajax/libs/require.js/2.3.6/require.min.js\" integrity=\"sha512-c3Nl8+7g4LMSTdrm621y7kf9v3SDPnhxLNhcjFJbKECVnmZHTdo+IRO05sNLTH/D3vA6u1X32ehoLC7WFVdheg==\" crossorigin=\"anonymous\"></script>\n<script src=\"https://cdnjs.cloudflare.com/ajax/libs/jquery/3.5.1/jquery.min.js\" integrity=\"sha512-bLT0Qm9VnAYZDflyKcBaQ2gg0hSYNQrJ8RilYldYQ1FxQYoCLtUjuuRuZo+fjqhx/qtq/1itJ0C2ejDxltZVFg==\" crossorigin=\"anonymous\"></script>\n<script type=\"application/javascript\">define('jquery', [],function() {return window.jQuery;})</script>\n"
      ]
    }
  }
}