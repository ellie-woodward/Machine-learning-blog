---
title: "Probablity with Diamonds"
author: "Ellie Woodward"
date: "2023-11-01"
categories: [code]
image: "dice.jpeg"
theme:
  - custom.css
---

<p style='font-size:23px'>
&emsp;&emsp; Probability theory and random variables underpin machine learning by providing the mathematical framework for data analysis. They empower data scientists to evaluate the likelihood of outcomes in experiments. This includes examining data distributions, which classify numerical data into two distinct forms: discrete and continuous. Discrete data involves countable data points, as seen in experiments like rolling a dice and recording the resulting numbers. Utilizing Python's diceRoll function enables the creation of a discrete dataset, visualizable through a histogram.
</p>
```{python}
import pandas as pd
import numpy as np
import matplotlib.pyplot as plt
import scipy.stats as stats
import seaborn as sns
def diceRoll(n):
    rollsList = []
    for i in range(n):
        two_dice = ( np.random.randint(1, 7) + np.random.randint(1, 7) )
        rollsList.append(two_dice)
    return rollsList

data = diceRoll(10)
# print(data)
bins = np.arange(14) - 0.5
weights = np.ones_like(data) / len(data)
plt.hist(data, weights=weights, bins=bins, color="blue", rwidth=0.85)
plt.title("Probability of Rolling 2 Dice Histogram")
plt.xlabel("Sum of 10 2 dice rolls")
plt.ylabel("Probability")
plt.xticks(range(1,14))
plt.yticks(np.arange(0, .5, step=0.1))
# Set axes limit
plt.xlim(1,13)
plt.show()
```
```{python}
#| code-fold: true

data = diceRoll(100)
bins = np.arange(14) - 0.5
weights = np.ones_like(data) / len(data)
plt.hist(data, weights=weights, bins=bins, color="blue", rwidth=0.85)
plt.title("Probability of Rolling 2 Dice Histogram")
plt.xlabel("Sum of 100 2 dice rolls")
plt.ylabel("Probability")
plt.xticks(range(1,14))
plt.yticks(np.arange(0, .5, step=0.1))
plt.xlim(1,13)
plt.show()

data = diceRoll(10000)
bins = np.arange(14) - 0.5
weights = np.ones_like(data) / len(data)
plt.hist(data, weights=weights, bins=bins, color="blue", rwidth=0.85)
plt.title("Probability of Rolling 2 Dice Histogram")
plt.xlabel("Sum of 10000 2 dice rolls")
plt.ylabel("Probability")
plt.xticks(range(1,14))
plt.yticks(np.arange(0, .5, step=0.1))
plt.xlim(1,13)
plt.show()
```
<p style='font-size:23px'>
&emsp;&emsp;In the initial graph with a lower sample size, the plot appears more erratic. However, as the sample size increases, the distribution tends toward normality, resembling a bell curve typical of a Gaussian distribution. The function employs a random number generator, crucial for any dataset as randomness characterizes real-world scenarios. Random variables aid in quantifying these real-world experiments, particularly in capturing the central tendency of their distributions with larger sample sizes. With smaller samples, the impact of random variables is limited, as depicted in the initial graph. But as sample sizes grow, the graph takes shape, revealing the true median, which, in this case, is 7. These random variables, in this context, are considered discrete due to their limited range of possible values derived from a 6-sided dice, specifically ranging from 2 to 12.
</p>
``` {python} 
#| code-fold: true
diamonds = pd.read_csv('../../python-notebooks/datasets/diamonds.csv')
diamonds.sort_values(by=["price"], ascending=True, inplace=True)
```
<p style='font-size:23px'>
&emsp;&emsp;Continuous probability theory operates within a continuous data space, where values exist across a spectrum rather than discrete points. Take, for instance, prices—they are not confined to specific values but can vary extensively based on seller discretion. In a diamond dataset obtained online, the prices showcase significant variability. By examining the head (the lowest values) and the tail (the highest values) of the dataset, one can observe starkly different price points. Additionally, the range of prices can be considerable, allowing for the possibility of someone charging double the highest price for a diamond, illustrating the wide span of potential values within continuous datasets like these.
<p>
``` {python} 
diamonds.head()
```
``` {python}
diamonds.tail()
```

<p style='font-size:23px'>
&emsp;&emsp;When we plot the data with price on the x-axis and count on the y-axis, it often shows an exponential distribution. This suggests that prices have no upper limit—they can keep rising as high as the seller wants.
</p>
``` {python}
sns.displot(diamonds["price"])
```

 <p style='font-size:23px'>
&emsp;&emsp;Probability and random variables are vital in machine learning. In supervised learning, we analyze the probability of X occurring based on observed variables Y. Understanding these distributions of observed data assists us in predicting outcomes. Hopefully, this blog has shed light on probability distributions, random variables, and their impact on machine learning.
</p>

<br/>
<br />
 <p style='font-size:15px'>
Thank you!
</p>
